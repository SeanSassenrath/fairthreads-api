<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>FairtThreads Products</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800' rel='stylesheet' type='text/css'>
    <link href="/styles/products.css" rel="stylesheet" type="text/css">
  </head>
  <body>
    <div class="page-container">
      <nav class="main-nav">
        <div class="nav-options">
          <ul class="link-list">
            <li><a href="#" class="active">Products</a></li>
            <li><a href="admin/categories">Categories</a></li>
            <li><a href="admin/styles">Styles</a></li>
          </ul>
          <ul class="filter-list">
            <li class="filter-women">Women</li>
            <li class="filter-men">Men</li>
          </ul>
        </div>
        <div class="">
          <div class="save">
            Save changes
          </div>
        </div>
      </nav>

      <div class="help">
        <p>
          First, select a category to assign a product to using the left nav.
        </p>
      </div>

      <div class="main-area-container">
        <div class="products-container">
        </div>
      </div>
    </div>

    <script id="product-template" type="text/x-handlebars-template">
      {{#each product}}
      {{#equal this.gender "womens-clothes"}}
      <div id="{{this._id}}" class="product womens">
      {{else}}
      <div id="{{this._id}}" class="product mens">
      {{/equal}}
        <div class="tool-bar">
          <i class="fa fa-pencil-square-o edit" aria-hidden="true"></i>
          <p>Active<p>
          <i class="fa fa-times-circle-o delete" aria-hidden="true"></i>
        </div>
        <img class="product-image" src={{this.imageOriginal}} />
        <div class="product-details-container">
          <div class="product-details active">
            <p>{{this.name}}</p>
            {{#if this.fairThreadsCategory}}
            <p>{{this.fairThreadsCategory}}</p>
            {{else}}
            <p>No category</p>
            {{/if}}
            <p class="product-id">{{this._id}}</p>
          </div>
          <div class="edit-product-details">
            <input type="text" value="{{this.name}}" class="edit-name">
            <div class="edit-category-container">
              <p>{{this.category}}</p>
            </div>
            <div class="edit-gender">
              <div>
                Male
              </div>
              <div>
                Female
              </div>
            </div>
            <div class="edit-fit">
              <div>
                Contain
              </div>
              <div>
                Cover
              </div>
            </div>
            <div class="edit-activation">
              <p>Activate</p>
            </div>
            <div class="edit-actions">
              <div class="edit-cancel">
                Cancel
              </div>
              <div class="edit-save">
                Save
              </div>
            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </script>

    <script type="text/javascript">
      $(document).ready(function() {
        var womensCategories;
        var mensCategories;
        var allProducts;
        var genderToAssign;
        var changes = {};
        var editedProduct = {}

        // Helpers
        var toggleActiveClasses = function(element) {
          $(element).removeClass('active', $(element).siblings())
          $(element).siblings().addClass('active')
        }

        // Assigning gender
        $('.assign-product-container nav ul li').on('click', function() {
          toggleActiveClasses(this)
        })

        $('.assign').on('click', function() {
          changes = {};
          genderToAssign === $(this).html().toLowerCase() ? genderToAssign = null : genderToAssign = $(this).html();
        })

        // Filtering
        var filterClothingByGender = function(products, gender) {
          var clothes = products.filter(function(product) {
            if (gender === 'womens-clothes') {
              product.categories = womensCategories;
            } else if (gender === 'men'){
              product.categories = mensCategories;
            }
            return product ? product.gender === gender : null
          })
          populateProducts({product: clothes});
        }

        $('.filter-women').on('click', function() {
          toggleActiveClasses(this)
          filterClothingByGender(allProducts, 'womens-clothes');
        })

        $('.filter-men').on('click', function() {
          toggleActiveClasses(this)
          filterClothingByGender(allProducts, 'men');
        })

        // Handlebars Templating
        var source = $("#product-template").html();

        Handlebars.registerHelper('equal', function(lvalue, rvalue, options) {
          if (arguments.length < 3)
              throw new Error("Handlebars Helper equal needs 2 parameters");
          if( lvalue!=rvalue ) {
              return options.inverse(this);
          } else {
              return options.fn(this);
          }
        });

          Handlebars.registerHelper("debug", function(optionalValue) {
            console.log("Current Context");
            console.log("====================");
            console.log(this);
            if (optionalValue) {
                console.log("Value");
                console.log("====================");
                console.log(optionalValue);
            }
          });

        // Get request for products
        $.ajax({
          type: 'get',
          url: '/admin/product-lists',
          dataType: 'JSON',
        }).done(function(data) {
          womensCategories = data.womensCategories;
          mensCategories = data.mensCategories;
          allProducts = data.allProducts;
          filterClothingByGender(data.allProducts, 'womens-clothes');
          $('.filter-women').addClass('active');
        }).fail(function(err) {
          console.log('Error: ', err)
        })

        // Put request for saving changes
        $('.save').on('click', function() {
          changes = JSON.stringify(changes);
          $.ajax({
            type: 'put',
            url: '/admin/product-lists',
            dataType: 'json',
            data: {data: changes}
          }).done(function(data) {
            setTimeout(function(){// wait for 5 secs(2)
              location.reload(); // then reload the page.(3)
            }, 1000);
          }).fail(function(err) {
            console.log(err)
            setTimeout(function(){// wait for 5 secs(2)
              location.reload(); // then reload the page.(3)
            }, 1000);
          })
        })

        // Put request for deleting a product
        var deleteProduct = function(id, parent) {
          id = JSON.stringify(id);
          console.log('id', id)
          $.ajax({
            type: 'put',
            url: '/admin/product-lists/delete',
            dataType: 'json',
            data: {data: id}
          }).done(function(data) {
            console.log('data', data)
          }).fail(function(err) {
            console.log(err)
          })
        }

        // Populate products to the view
        var populateProducts = function(products) {
          $('.products-container').empty()
          var template = Handlebars.compile(source);
          var data = products;
          var html = template(data);
          $('.products-container').append(html)
          // $('.product').on('click', function() {
          //   if(genderToAssign) {
          //     $(this).toggleClass('active');
          //     if($(this).hasClass('active')) {
          //       changes[$(this).find('.product-id').html()] = genderToAssign
          //     } else {
          //       delete changes[$(this).find('.product-id').html()]
          //     }
          //   } else {
          //     $('.help').show();
          //     setTimeout(function() {$('.help').hide();}, 5000)
          //   }
          // })
          $('.product').on('click', '.edit', function(e) {
            e.stopPropagation();
            toggleActiveClasses($(this).parent().parent().find('.active'))
          })
          $('.product').on('click', '.delete', function(e) {
            e.stopPropagation();
            var id = $(this).closest('.product').attr('id');
            $(this).closest('.product').hide();
            deleteProduct(id);
          })
        }
      })


    </script>
  </body>
</html>
