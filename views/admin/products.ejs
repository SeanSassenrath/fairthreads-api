<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>FairtThreads Products</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800' rel='stylesheet' type='text/css'>
    <link href="/styles/pace.css" rel="stylesheet" type="text/css">
    <link href="/styles/products.css" rel="stylesheet" type="text/css">
  </head>
  <body style="min-height: 2000px;">
    <div class="page-container">
      <nav class="main-nav">
        <div class="nav-container">
          <div>
            Products
          </div>
          <div class="dropdown">
            <div style="padding: 8px 0px;">Womens</div>
            <div class="filter-women dropdown-content">
              <div>All clothes</div>
              <div class="tops">Tops</div>
              <div class="bottoms">Bottoms</div>
              <div class="dresses">Dresses</div>
              <div class="athleisure">Athleisure</div>
              <div class="shoes">Shoes</div>
              <div class="accessories">Accessories</div>
            </div>
          </div>
          <div class="dropdown">
            <div style="padding: 8px 0px;">Mens</div>
            <div class="filter-men dropdown-content">
              <div class="">All clothes</div>
              <div class="tops">Tops</div>
              <div class="bottoms">Bottoms</div>
              <div class="active">Active</div>
              <div class="shoes">Shoes</div>
              <div class="accessories">Accessories</div>
            </div>
          </div>
        </div>
      </nav>

      <div class="help">
        <p>
          First, select a category to assign a product to using the left nav.
        </p>
      </div>

      <div class="main-area-container">
        <h3 class="category-title"></h3>
        <div class="products-container">
        </div>
      </div>
    </div>

    <script id="product-template" type="text/x-handlebars-template">
      {{#each product}}
      {{#equal this.gender "womens-clothes"}}
      <div id="{{this._id}}" class="product womens">
      {{else}}
      <div id="{{this._id}}" class="product mens">
      {{/equal}}
        <div class="tool-bar">
          <i class="fa fa-pencil-square-o edit" aria-hidden="true"></i>
          {{#if this.salePrice}}
            <p>On Sale for ${{this.salePrice}}</p>
          {{/if}}
          <i class="fa fa-times-circle-o delete" aria-hidden="true"></i>
        </div>
        <img class="product-image" src={{this.imageOriginal}} />
        <div class="product-details-container">
          <p>${{this.price}}</p>
          <div class="edit-product-details">
            <input type="text" value="{{this.name}}" class="edit-name">
            <div class="edit-category-container dropdown">
              <p class="current-category" style="text-transform: capitalize;">{{this.fairThreadsCategory}}</p>
              <div class="dropdown-content">
                <hr />
                {{#each this.categories}}
                  <p class="{{this}} category-option" style="text-transform: capitalize;">{{this}}</p>
                {{/each}}
              </div>
            </div>
            <div class="edit-activation">
              <p>Activate</p>
            </div>
            <div class="edit-more-detail">
              <div class="edit-gender">
                <div class="men {{isActive this.gender 'men'}}">
                  Male
                </div>
                <div class="womens-clothes {{isActive this.gender 'womens-clothes'}}">
                  Female
                </div>
              </div>
              <div class="edit-fit">
                <div class="contain {{isActive this.objectFit 'contain'}}">
                  Contain
                </div>
                <div class="cover {{isActive this.objectFit 'cover'}}">
                  Cover
                </div>
              </div>
            </div>
          </div>
          <div class="edit-actions">
            <div class="edit-cancel">
              Cancel
            </div>
            <div class="edit-save">
              Save
            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </script>

    <script type="text/javascript">
      $(document).ready(function() {
        var womensCategories;
        var mensCategories;
        var allProducts;
        var genderToAssign;
        var editId;
        var changes = {};

        // Helpers
        var toggleActiveClasses = function(element) {
          if($(element).hasClass('active')) {
            $(element).removeClass('active')
            $(element).siblings().addClass('active')
          } else if($(element).siblings().hasClass('active')) {
            $(element).addClass('active')
            $(element).siblings().removeClass('active')
          } else {
            $(element).addClass('active')
          };
        };

        // Edit product
        var editProduct = function() {
          $('.edit-product-details').on('click', function(e) {
            if(editId === undefined || editId === $(this).closest('.product').attr('id')) {
              console.log("Product Id is being edited", $(this).closest('.product').attr('id'));
              editId = $(this).closest('.product').attr('id');
              changes["id"] = editId;
            } else {
              alert("Cancel or save edit in progress for product " + editId + " before editing another product.");
            };
          });
        };

        var editMoreDetail = function() {
          $('.edit').on('click', function() {
            toggleActiveClasses($(this).parent().parent().find('.edit-more-detail'))
          });
        }

        // Cancel edit
        var cancelEdit = function() {
          $('.edit-cancel').on('click', function() {
            console.log('Cancel request')
            if(editId === $(this).closest('.product').attr('id')) {
              alert('The editing of product ' + editId + ' has been canceled.');
              editId = undefined;
            } else {
              alert('This product is not being edited and cannot be canceled.');
            };
          });
        };

        // Save edit
        var saveEdit = function() {
          $('.edit-save').on('click', function() {
            console.log('Save request')
            if(editId === $(this).closest('.product').attr('id')) {
              changeProductName($(this).closest('.product'))
              alert('The editing of product ' + editId + ' has been saved.');
              saveProductChanges();
            } else {
              alert('This product is not being edited and cannot be saved.');
            };
          });
        };

        // Delete product
        var selectDeleteProduct = function() {
          $('.product').on('click', '.delete', function(e) {
            e.stopPropagation();
            var id = $(this).closest('.product').attr('id');
            $(this).closest('.product').hide();
            deleteProduct(id);
          })
        }

        // Change product name
        var changeProductName = function(product) {
          changes['name'] = product.find('.edit-name').val()
          console.log("Changing product name", changes)
        }

        // Select new img fit
        var selectNewImgFit = function() {
          $('.edit-fit div').on('click', function(e) {
            if(editId === $(this).closest('.product').attr('id') || editId === undefined) {
              toggleActiveClasses($(this));
              changes['objectFit'] = $(this).attr('class').split(' ')[0];
              console.log(changes);
            } else {
              console.log("Incorrect product", changes);
            }
          });
        };

        // Select new gender
        var selectNewGender = function() {
          $('.edit-gender div').on('click', function(e) {
            if(editId === $(this).closest('.product').attr('id') || editId === undefined) {
              toggleActiveClasses($(this));
              changes['gender'] = $(this).attr('class').split(' ')[0];
              console.log(changes);
            } else {
              console.log("Incorrect product", changes);
            }
          });
        };

        //Select new category
        var selectNewCategory = function() {
          $('.category-option').on('click', function(e) {
            if(editId === $(this).closest('.product').attr('id') || editId === undefined) {
              var newCategory = $(this).attr('class').split(' ')[0];
              $(this).parent().siblings('.current-category').html(newCategory);
              changes['category'] = newCategory;
              console.log(changes);
            } else {
              console.log("Incorrect product", changes);
            }
          });
        };

        // Product filters
        var filterClothing = function(products, gender, category) {
          var categoryTitle = $('.category-title');
          var clothes = products.filter(function(product) {
            if (gender === 'womens-clothes') {
              product.categories = womensCategories;
              if (category) {
                categoryTitle.html(category)
                return product ? product.gender === gender && product.fairThreadsCategory === category : null
              } else {
                categoryTitle.html('All products')
                return product ? product.gender === gender : null
              }
            } else if (gender === 'men'){
              product.categories = mensCategories;
              if (category) {
                return product ? product.gender === gender && product.fairThreadsCategory === category : null
              } else {
                return product ? product.gender === gender : null
              }
            }
          })
          populateProducts({product: clothes});
        }

        $('.filter-women').on('click', 'div', function() {
          filterClothing(allProducts, 'womens-clothes', $(this).attr('class'));
        })

        $('.filter-men').on('click', 'div', function() {
          filterClothing(allProducts, 'men', $(this).attr('class'));
        })

        // Handlebars Templating
        var source = $("#product-template").html();

        // Handlebars conditional helper (if / then logic)
        Handlebars.registerHelper('equal', function(lvalue, rvalue, options) {
          if (arguments.length < 3)
              throw new Error("Handlebars Helper equal needs 2 parameters");
          if( lvalue!=rvalue ) {
              return options.inverse(this);
          } else {
              return options.fn(this);
          }
        });

        // Handlebars debug helper (console.logs context)
        Handlebars.registerHelper("debug", function(optionalValue) {
          console.log("Current Context");
          console.log("====================");
          console.log(this);
          if (optionalValue) {
              console.log("Value");
              console.log("====================");
              console.log(optionalValue);
          }
        });

        // Load data with active styles
        Handlebars.registerHelper('isActive', function (input, value) {
          return input === value ? 'active' : '';
        });

        // Get request for products
        $.ajax({
          type: 'get',
          url: '/admin/product-lists',
          dataType: 'JSON',
        }).done(function(data) {
          womensCategories = data.womensCategories;
          mensCategories = data.mensCategories;
          allProducts = data.allProducts;
          filterClothing(data.allProducts, 'womens-clothes');
          $('.filter-women').addClass('active');
        }).fail(function(err) {
          console.log('Error: ', err)
        })

        // Put request for saving product changes
        var saveProductChanges = function() {
          changes = JSON.stringify(changes);
          $.ajax({
            type: 'put',
            url: '/admin/product-lists/edit',
            dataType: 'json',
            data: {data: changes}
          }).done(function(data) {
            console.log('success')
            changes = {};
            editId = undefined;
          }).fail(function(err) {
            console.log(err)
            // changes = {};
            // editId = undefined;
            console.log(changes)
          })
        }

        // Put request for deleting a product
        var deleteProduct = function(id, parent) {
          id = JSON.stringify(id);
          console.log('id', id)
          $.ajax({
            type: 'put',
            url: '/admin/product-lists/delete',
            dataType: 'json',
            data: {data: id}
          }).done(function(data) {
            console.log('data', data)
          }).fail(function(err) {
            console.log(err)
          })
        }

        // Populate products to the view
        var populateProducts = function(products) {
          $('.products-container').empty()
          var template = Handlebars.compile(source);
          var data = products;
          var html = template(data);
          $('.products-container').append(html)
          editProduct();
          selectDeleteProduct();
          selectNewImgFit();
          selectNewGender();
          selectNewCategory();
          editMoreDetail();
          saveEdit();
          cancelEdit();
        }
      })
    </script>
  </body>
</html>
