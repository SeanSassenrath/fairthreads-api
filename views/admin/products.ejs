<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>FairtThreads Products</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800' rel='stylesheet' type='text/css'>
    <link href="/styles/products.css" rel="stylesheet" type="text/css">
  </head>
  <body>
    <div class="page-container">
      <nav class="main-nav">
        <div class="nav-container">
          <div>
            Products
          </div>
          <div class="dropdown">
            <div class="">Womens</div>
            <div class="filter-women dropdown-content">
              <div>All clothes</div>
              <div class="tops">Tops</div>
              <div class="bottoms">Bottoms</div>
              <div class="dresses">Dresses</div>
              <div class="athleisure">Athleisure</div>
              <div class="shoes">Shoes</div>
              <div class="accessories">Accessories</div>
            </div>
          </div>
          <div class="dropdown">
            <div class="filter-men">Mens</div>
            <div class="dropdown-content">
              <div class="tops">Tops</div>
              <div class="bottoms">Bottoms</div>
              <div class="active">Active</div>
              <div class="shoes">Shoes</div>
              <div class="accessories">Accessories</div>
            </div>
          </div>
        </div>
      </nav>

      <div class="help">
        <p>
          First, select a category to assign a product to using the left nav.
        </p>
      </div>

      <div class="main-area-container">
        <div class="products-container">
        </div>
      </div>
    </div>

    <script id="product-template" type="text/x-handlebars-template">
      {{#each product}}
      {{#equal this.gender "womens-clothes"}}
      <div id="{{this._id}}" class="product womens">
      {{else}}
      <div id="{{this._id}}" class="product mens">
      {{/equal}}
        <div class="tool-bar">
          <i class="fa fa-pencil-square-o edit" aria-hidden="true"></i>
          <p>Active<p>
          <i class="fa fa-times-circle-o delete" aria-hidden="true"></i>
        </div>
        <img class="product-image" src={{this.imageOriginal}} />
        <div class="product-details-container">
          <div class="product-details active">
            <p>{{this.name}}</p>
            {{#if this.fairThreadsCategory}}
            <p>{{this.fairThreadsCategory}}</p>
            {{else}}
            <p>No category</p>
            {{/if}}
            <p class="product-id">{{this._id}}</p>
          </div>
          <div class="edit-product-details">
            <input type="text" value="{{this.name}}" class="edit-name">
            <div class="edit-category-container dropdown">
              <p class="current-category" style="text-transform: capitalize;">{{this.fairThreadsCategory}}</p>
              <div class="dropdown-content">
                {{#each this.categories}}
                  <p class="{{this}} category-option" style="text-transform: capitalize;">{{this}}</p>
                {{/each}}
              </div>
            </div>
            <div class="edit-gender">
              <div class="men">
                Male
              </div>
              <div class="womens-clothes">
                Female
              </div>
            </div>
            <div class="edit-fit">
              <div class="contain">
                Contain
              </div>
              <div class="cover">
                Cover
              </div>
            </div>
            <div class="edit-activation">
              <p>Activate</p>
            </div>
            <div class="edit-actions">
              <div class="edit-cancel">
                Cancel
              </div>
              <div class="edit-save">
                Save
              </div>
            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </script>

    <script type="text/javascript">
      $(document).ready(function() {
        var womensCategories;
        var mensCategories;
        var allProducts;
        var genderToAssign;
        var changes = {};

        // Helpers
        var toggleActiveClasses = function(element) {
          if($(element).hasClass('active')) {
            $(element).removeClass('active')
            $(element).siblings().addClass('active')
          } else if($(element).siblings().hasClass('active')) {
            $(element).addClass('active')
            $(element).siblings().removeClass('active')
          }
          else {
            $(element).addClass('active')
          }
        }

        // Edit product
        var editProduct = function() {
          $('.product').on('click', '.edit', function(e) {
            e.stopPropagation();
            toggleActiveClasses($(this).parent().parent().find('.active'))
            changes["id"] = $(this).closest('.product').attr('id')
          })
        }

        // Delete product
        var selectDeleteProduct = function() {
          $('.product').on('click', '.delete', function(e) {
            e.stopPropagation();
            var id = $(this).closest('.product').attr('id');
            $(this).closest('.product').hide();
            deleteProduct(id);
          })
        }

        // Change product name
        var changeProductName = function(product) {
          changes['name'] = $(product).parent().parent().find('.edit-name').val()
          console.log(changes)
        }

        // Select new img fit
        var selectNewImgFit = function() {
          $('.edit-fit div').on('click', function(e) {
            e.stopPropagation;
            toggleActiveClasses($(this))
            changes['objectFit'] = $(this).attr('class').split(' ')[0]
            console.log(changes)
          })
        }

        // Select new gender
        var selectNewGender = function() {
          $('.edit-gender div').on('click', function(e) {
            e.stopPropagation;
            toggleActiveClasses($(this))
            changes['gender'] = $(this).attr('class').split(' ')[0]
            console.log(changes)
          });
        };

        //Select new category
        var selectNewCategory = function() {
          $('.category-option').on('click', function(e) {
            e.stopPropagation;
            var newCategory = $(this).attr('class').split(' ')[0];
            $('.current-category').html(newCategory);
            changes['category'] = newCategory;
            console.log(changes)
          });
        };

        // Product filters
        var filterClothing = function(products, gender, category) {
          var clothes = products.filter(function(product) {
            if (gender === 'womens-clothes') {
              product.categories = womensCategories;
              if (category) {
                console.log("category")
                return product ? product.gender === gender && product.fairThreadsCategory === category : null
              } else {
                console.log("no cat")
                return product ? product.gender === gender : null
              }
            } else if (gender === 'men'){
              product.categories = mensCategories;
              if (category) {
                return product ? product.gender === gender && product.fairThreadsCategory === category : null
              } else {
                return product ? product.gender === gender : null
              }
            }
          })
          populateProducts({product: clothes});
        }

        $('.filter-women').on('click', 'div', function() {
          console.log('this id', $(this).attr('class'));
          filterClothing(allProducts, 'womens-clothes', $(this).attr('class'));
        })

        $('.filter-men').on('click', function() {
          filterClothing(allProducts, 'men', $(this).attr('class'));
        })

        // Handlebars Templating
        var source = $("#product-template").html();

        // Handlebars conditional helper (if / then logic)
        Handlebars.registerHelper('equal', function(lvalue, rvalue, options) {
          if (arguments.length < 3)
              throw new Error("Handlebars Helper equal needs 2 parameters");
          if( lvalue!=rvalue ) {
              return options.inverse(this);
          } else {
              return options.fn(this);
          }
        });

        // Handlebars debug helper (console.logs context)
        Handlebars.registerHelper("debug", function(optionalValue) {
          console.log("Current Context");
          console.log("====================");
          console.log(this);
          if (optionalValue) {
              console.log("Value");
              console.log("====================");
              console.log(optionalValue);
          }
        });

        // Get request for products
        $.ajax({
          type: 'get',
          url: '/admin/product-lists',
          dataType: 'JSON',
        }).done(function(data) {
          womensCategories = data.womensCategories;
          mensCategories = data.mensCategories;
          allProducts = data.allProducts;
          filterClothing(data.allProducts, 'womens-clothes');
          $('.filter-women').addClass('active');
        }).fail(function(err) {
          console.log('Error: ', err)
        })

        // Put request for saving product changes
        var saveProductChanges = function() {
          $('.edit-save').on('click', function() {
            changeProductName(this);
            changes = JSON.stringify(changes);
            $.ajax({
              type: 'put',
              url: '/admin/product-lists',
              dataType: 'json',
              data: {data: changes}
            }).done(function(data) {
              changes = {};
            }).fail(function(err) {
              console.log(err)
              changes = {};
              console.log(changes)
            })
          })
        }

        // Put request for deleting a product
        var deleteProduct = function(id, parent) {
          id = JSON.stringify(id);
          console.log('id', id)
          $.ajax({
            type: 'put',
            url: '/admin/product-lists/delete',
            dataType: 'json',
            data: {data: id}
          }).done(function(data) {
            console.log('data', data)
          }).fail(function(err) {
            console.log(err)
          })
        }

        // Populate products to the view
        var populateProducts = function(products) {
          $('.products-container').empty()
          var template = Handlebars.compile(source);
          var data = products;
          var html = template(data);
          $('.products-container').append(html)
          editProduct();
          selectDeleteProduct();
          selectNewImgFit();
          selectNewGender();
          selectNewCategory();
          saveProductChanges();
        }
      })
    </script>
  </body>
</html>
